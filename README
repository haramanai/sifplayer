SIFPLAYER for HTML5 it's a lib to play an unzipped sif file on the html canvas.
Sif are the files that produced by the open source vector animation software : Synfig www.synfig.org

It uses the createjs.TweenJS (MIT license) for the tweens. www.createjs.com
The example uses the Ticker.js from the createjs.EaselJS lib www.createjs.com

It's published under the MIT license.

It is not complete future. 
It supports the types of layers:
	Region
	Circle
	Import (image)
	PasteCanvas
	Scale
	Translate
	Rotate
	Zoom
	Stretch
	Linear Gradient (without the params zigzag and loop)
	Radial Gradient (without the params zigzag and loop)

The blend methods that much the globalCompositeOperation of the context2d

	Composite		=>  source-over
	Straight		=>  copy
	Onto			=>  source-atop
	Straight Onto	=>  source-in
	Behind			=>  destination-over
	Alpha Over		=>  destination-out
	Alpha Brighter	=>  destination-in

Synfig's Param Convert does not work. So take extra care that you do not convert any param when you are building your animation.
The only param that can be converted right now is the origin of the translation layer from vector to radial composite. If you convert anything else an error will be alerted.



Run the sifPlayer.html to see it in action. There is a min version and an example of how to use in the build folder

Also in the /assets/ are sifparser.html  you can run it to have an understanding of how the data looks like. But keep in mind that the defs will change in the init of the SifObject to be accessed by the id of the defs.

How to use it :

var mySif = sifPlayer.SifObject( xmlDoc, x, y, width, height, sifPath )

As you can see the first param is an XML Document object.
The x and y are the location in the canvas that will be the left up corner of the sif.
The width and height are the demension you wand the sif to be.
sifPath is the location of the actual sif.xml. This is needed so the player will load the imagies that been used for the synfig animation.

after the object is created it will be paused so to get it running you must tell the timeline of the SifObject to stop beeing paused
mySif.timeline.setPaused( false );

Also if you wand your animation to loop you can tell the timeline again to loop
mySif.timeline.loop = true;

For more information about the timeline see the createjs tweenjs documentations.

Then to render the sif on a context you must run 
mySif.draw( context );

In this state the animations will change by the Ticker.js from the createjs easeljs. You can make the sifPlayer to not be dependent by the Ticker.js but you will have to find a way to suits your needs.


